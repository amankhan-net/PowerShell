param (
    [string]$defenderkey
)

## This is optional if you want to use the script interactivly.
$systemmessagecolor = "cyan"
$processmessagecolor = "green"

# Application (client) ID, tenant ID and secret
$clientid = "enter client id here"
$tenantid = "enter tenant id here"
$clientsecret = $defenderkey


write-host -foregroundcolor $systemmessagecolor "Script exectuion has begun`n"

# Construct URI
$uri = "https://login.microsoftonline.com/$tenantId/oauth2/v2.0/token"

# Construct Body
$body = @{
    client_id     = $clientId
    scope         = "https://api.securitycenter.microsoft.com/.default"
    client_secret = $clientSecret
    grant_type    = "client_credentials"
}

write-host -foregroundcolor $processmessagecolor "Get OAuth 2.0 Token"
# Get OAuth 2.0 Token
$tokenRequest = Invoke-WebRequest -Method Post -Uri $uri -ContentType "application/x-www-form-urlencoded" -Body $body -UseBasicParsing

# Access Token
$token = ($tokenRequest.Content | ConvertFrom-Json).access_token

# Graph API call in PowerShell using obtained OAuth token (see other gists for more details)

# Specify the URI to call and method
$yesterday=(Get-Date).AddDays(-1).ToString('yyyy-MM-dd')
$uri = "https://api.securitycenter.microsoft.com/api/machines/SoftwareVulnerabilitiesByMachine?sinceTime=$yesterday"
$method = "GET"

write-host -foregroundcolor $processmessagecolor "Run Graph API Query"
# Run Graph API query 
$query = Invoke-WebRequest -Method $method -Uri $uri -ContentType "application/json" -Headers @{Authorization = "Bearer $token" } -ErrorAction Stop -UseBasicParsing

## Screen output

write-host -foregroundcolor $processmessagecolor "Parse results"
$ConvertedOutput = $query.content | ConvertFrom-Json

 $output=$ConvertedOutput.value | Where-Object {
    ($_.firstseentimestamp -as [DateTime]).Date -eq $yesterday} |select-object Devicename,FirstSeenTimestamp,lastseentimestamp,cveid,softwarename,softwarevendor, softwareversion,vulnerabilityseveritylevel,CvssScore,ExploitabilityLevel | Sort-Object devicename,lastseentimestamp  | Export-CSV -Path D:\a\1\s\reports\$yesterday".csv"  -NoTypeInformation


write-host -foregroundcolor $systemmessagecolor "`nScript Completed`n"
